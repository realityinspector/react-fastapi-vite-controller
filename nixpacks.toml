# https://nixpacks.com/docs/configuration/file

# set up some variables to minimize annoyance
[variables]
    NPM_CONFIG_UPDATE_NOTIFIER = 'false' # the update notification is relatively useless in a production environment
    NPM_CONFIG_FUND = 'false' # the fund notification is also pretty useless in a production environment

# Specify Python and Node.js versions
[phases.setup]
    nixPkgs = [
        'python39',
        'python39Packages.pip',
        'python39Packages.setuptools',
        'python39Packages.wheel',
        'nodejs_20',
        'gcc',  # Required for building some Python packages
        'postgresql'  # Required for psycopg2
    ]

# Install Python dependencies for the backend
[phases.python-deps]
    dependsOn = ['setup']
    cmds = [
        'python3.9 -m ensurepip --upgrade',
        'python3.9 -m pip install --upgrade pip setuptools wheel',
        'cd backend && python3.9 -m pip install -r requirements.txt'
    ]

# Run database migrations
[phases.db-migrations]
    dependsOn = ['python-deps']
    cmds = [
        'cd backend && python3.9 -m alembic upgrade head',
        'cd backend && python3.9 create_admin.py'
    ]

# Install npm dependencies with legacy peer deps
[phases.npm]
    dependsOn = ['db-migrations']
    cmds = ['npm install --legacy-peer-deps']

# Build the frontend
[phases.build]
    dependsOn = ['npm']
    cmds = ['npm run build']

# download caddy from nix
[phases.caddy]
    dependsOn = ['build']
    nixPkgs = ['caddy']

# format the Caddyfile with fmt
[phases.fmt]
    dependsOn = ['caddy']
    cmds = ['caddy fmt --overwrite Caddyfile']

# start the caddy web server and the FastAPI backend
[start]
    cmd = '(cd backend && python3.9 -m uvicorn app.main:app --host 0.0.0.0 --port 8000 &) && exec caddy run --config Caddyfile --adapter caddyfile 2>&1'